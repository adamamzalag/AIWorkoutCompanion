Here are all the files that contain OpenAI prompt-related code:

Primary OpenAI Files:

server/openai.ts - Original OpenAI implementation with detailed logging
server/openai-improved.ts - Streamlined OpenAI implementation
Route Files (where OpenAI functions are called):
3. server/routes.ts - Main API routes that trigger OpenAI calls

server/routes-clean.ts - Alternative route implementation
Related Files:
5. server/progress-tracker.ts - Tracks progress during OpenAI generation (used with the multi-step process)

Key Functions by File:

server/openai.ts:

generateWorkoutFramework() - Creates plan structure
generateWeeklyWorkouts() - Generates specific weekly workouts
generateWorkoutPlan() - Main plan generation function
generateCoachingTip() - Exercise-specific tips
generateChatResponse() - AI chat functionality
analyzeWorkoutProgress() - Progress analysis
findSimilarExercise() - Exercise recommendations
server/openai-improved.ts:

Similar functions but with simplified implementations and less logging
API Endpoints that use OpenAI:

/api/generate-plan - Workout plan generation
/api/coaching-tip - Exercise coaching tips
/api/chat - AI chat responses
/api/progress-analysis - Workout progress insights
These are the files you'd need to work with to modify how the OpenAI prompts are structured, what data they receive, and how they format their responses for the database.

Yes, you're absolutely right - there are redundant files. Looking at the structure:

Duplicate OpenAI Files:

server/openai.ts (original with extensive logging)
server/openai-improved.ts (streamlined version)
Duplicate Route Files:

server/routes.ts (main implementation)
server/routes-clean.ts (alternative implementation)
What's happening:
It looks like someone created "improved" and "clean" versions but kept the originals, so now there are two implementations of essentially the same functionality.

Current Active Files:
Based on the imports and recent activity, it appears the app is using:

server/routes.ts (the main routes file)
Both OpenAI files are imported in different places
Recommendation:
We should consolidate to single files:

Choose one OpenAI implementation (probably keep the improved version)
Choose one routes implementation (probably the main routes.ts)
Remove the duplicates to avoid confusion
This redundancy makes it confusing to know which file to edit when making changes to the OpenAI integration. Would you like me to identify which files are actually being used by the application and clean up the duplicates?